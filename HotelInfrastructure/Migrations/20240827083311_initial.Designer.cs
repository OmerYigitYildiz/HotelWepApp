// <auto-generated />
using System;
using HotelInfrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HotelInfrastructure.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20240827083311_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HotelDomain.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("HotelDomain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Page")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("HotelDomain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4709dbb5-d36f-430d-8d2f-137d816cb0ac"),
                            Country = "USA",
                            CreatedDate = new DateTime(2024, 8, 27, 11, 33, 11, 160, DateTimeKind.Local).AddTicks(7183),
                            Email = "ali@gmail.com",
                            FirstName = "Ali",
                            LastName = "Yagız",
                            Name = "Ali Yagız"
                        },
                        new
                        {
                            Id = new Guid("7ffd45e0-0b24-4390-b8b9-0046267c3baf"),
                            Country = "Turkiye",
                            CreatedDate = new DateTime(2024, 8, 27, 11, 33, 11, 160, DateTimeKind.Local).AddTicks(7475),
                            Email = "gokdeniz@gmail.com",
                            FirstName = "Gokdeniz",
                            LastName = "Sahin",
                            Name = "Gokdeniz Sahin"
                        },
                        new
                        {
                            Id = new Guid("f6583844-e295-4aeb-9fc7-6683ff995cd4"),
                            Country = "England",
                            CreatedDate = new DateTime(2024, 8, 27, 11, 33, 11, 160, DateTimeKind.Local).AddTicks(7485),
                            Email = "mirac@gmail.com",
                            FirstName = "Mirac",
                            LastName = "Kars",
                            Name = "Mirac Kars"
                        });
                });

            modelBuilder.Entity("HotelDomain.Entities.Reserved", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<int>("Guests")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<string>("RoomName")
                        .HasColumnType("text");

                    b.Property<string>("RoomType")
                        .HasColumnType("text");

                    b.Property<string>("Tc_PassportNo")
                        .HasColumnType("text");

                    b.Property<string>("checkInDate")
                        .HasColumnType("text");

                    b.Property<string>("checkOutDate")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("Reserveds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6434fe36-f3d1-4667-a098-4468198f71c1"),
                            FullName = "Ali Yagız",
                            Guests = 3,
                            Phone = "052484345",
                            RoomId = new Guid("bd682482-c897-4ace-ade2-3564ab4e118b"),
                            RoomName = "Standart-101",
                            RoomType = "Standart",
                            Tc_PassportNo = "784548547824",
                            checkInDate = "2024-05-12",
                            checkOutDate = "2024-05-15"
                        },
                        new
                        {
                            Id = new Guid("5feae7e1-8c36-44fb-b1b7-836a00158ab3"),
                            FullName = "Gokdeniz Sahin",
                            Guests = 2,
                            Phone = "05364854",
                            RoomId = new Guid("99741f1f-1b86-4f8c-a2cc-1bfc0c2c3e70"),
                            RoomName = "VIP-809",
                            RoomType = "VIP",
                            Tc_PassportNo = "8849995584",
                            checkInDate = "2024-06-18",
                            checkOutDate = "2024-06-28"
                        },
                        new
                        {
                            Id = new Guid("9425dcd5-95b2-40c8-a8a2-cedd6aabfdde"),
                            FullName = "Beyza Nur",
                            Guests = 4,
                            Phone = "0535889414",
                            RoomId = new Guid("f443bd0e-e2a0-4100-a5a7-e1c6b3a3cf37"),
                            RoomName = "Standart-206",
                            RoomType = "Standart",
                            Tc_PassportNo = "231515354745",
                            checkInDate = "2024-08-02",
                            checkOutDate = "2024-08-09"
                        });
                });

            modelBuilder.Entity("HotelDomain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BedType")
                        .HasColumnType("text");

                    b.Property<int>("Beds")
                        .HasColumnType("integer");

                    b.Property<int>("Guests")
                        .HasColumnType("integer");

                    b.Property<string>("RoomDescription")
                        .HasColumnType("text");

                    b.Property<string>("RoomName")
                        .HasColumnType("text");

                    b.Property<string>("RoomType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd682482-c897-4ace-ade2-3564ab4e118b"),
                            BedType = "Tek kişilik",
                            Beds = 2,
                            Guests = 3,
                            RoomDescription = "Klima Mevcut",
                            RoomName = "Standart-101",
                            RoomType = "Standart"
                        },
                        new
                        {
                            Id = new Guid("99741f1f-1b86-4f8c-a2cc-1bfc0c2c3e70"),
                            BedType = "Çift kişilik",
                            Beds = 1,
                            Guests = 2,
                            RoomDescription = "Klima Mevcut",
                            RoomName = "VIP-805",
                            RoomType = "VIP"
                        },
                        new
                        {
                            Id = new Guid("f443bd0e-e2a0-4100-a5a7-e1c6b3a3cf37"),
                            BedType = "Tek kişilik",
                            Beds = 3,
                            Guests = 5,
                            RoomDescription = "Klima Mevcut",
                            RoomName = "Standart-204",
                            RoomType = "Standart"
                        });
                });

            modelBuilder.Entity("HotelDomain.Entities.Book", b =>
                {
                    b.HasOne("HotelDomain.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("HotelDomain.Entities.Reserved", b =>
                {
                    b.HasOne("HotelDomain.Entities.Room", "Room")
                        .WithOne()
                        .HasForeignKey("HotelDomain.Entities.Reserved", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelDomain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
